name: Main Pipeline

on: 
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  
  # flake8-lint:
  #   runs-on: ubuntu-latest
  #   name: flake8 Lint
  #   steps:
  #     - name: Check out source repository
  #       uses: actions/checkout@v3
  #     - name: Set up Python environment
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.9"
  #     - run: pip install flake8-docstrings
  #     - name: flake8 Lint
  #       uses: py-actions/flake8@v2
  #       with:
  #         args: "--docstring-convention google" 


  tox-to-sonarcloud:
    name: Tox to SonarCloud (Scan & Quality Gate Check)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
        # os: [ubuntu-latest, windows-latest]

    steps:
      - name: checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis      
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # - name: Set up Python environment
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        run: tox

      # - name: Install tox and any other packages
      #   run: pip install tox
      # - name: Run tox
      #   run: tox -e py


      # https://github.com/marketplace/actions/sonarcloud-scan
      # https://github.com/marketplace/actions/official-sonarqube-scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
      # Check the Quality Gate status.
      # https://github.com/marketplace/actions/sonarqube-quality-gate-check
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

  build-docker-image:
    needs: tox-to-sonarcloud
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-buildx-action@v2
    - name: login dockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: login github packages
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}    
    - name: set lower case owner name
      run: |
        echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      env:
        OWNER: '${{ github.repository_owner }}'
    - name: docker build y pusheo
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGENAME }}:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGENAME }}:${{ github.run_number }}
          ghcr.io/${{ env.OWNER_LC }}/${{ vars.IMAGENAME }}:latest
          ghcr.io/${{ env.OWNER_LC }}/${{ vars.IMAGENAME }}:${{ github.run_number }}

